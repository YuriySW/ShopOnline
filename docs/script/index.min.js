/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ 9:
/***/ ((__unused_webpack___webpack_module__, __unused_webpack___webpack_exports__, __webpack_require__) => {

/* harmony import */ var _modules_timer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(615);
/* harmony import */ var _modules_render_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(212);
/* harmony import */ var _modules_burger_menu_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(89);
/* harmony import */ var _modules_dropdownMenu_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(174);





/***/ }),

/***/ 89:
/***/ (() => {

const menuButton = document.querySelector('.menu-btn');
const burgerMenu = document.querySelector('.burger-menu');
const menuBtnBm = document.querySelector('.menu-btn_bm');
const openMenu = () => {
  menuButton.addEventListener('click', () => {
    burgerMenu.classList.toggle('burger-menu-visibility');
    menuButton.style.display = 'none';
    menuBtnBm.style.display = 'block';
  });
};
const closeMenu = event => {
  if (!burgerMenu.contains(event.target) && !menuButton.contains(event.target)) {
    burgerMenu.classList.remove('burger-menu-visibility');
    menuBtnBm.style.display = 'none';
    menuButton.style.display = 'block';
  }
};
document.addEventListener('click', closeMenu);
openMenu();

/***/ }),

/***/ 174:
/***/ (() => {

const buttons = document.querySelectorAll('.footer__title_dr');
function handleToggle(event) {
  buttons.forEach(button => {
    const block = button.closest('.footer__block');
    const list = block.querySelector('.footer__list');
    const openIcon = button.querySelector('.footer__svg-open');
    const closeIcon = button.querySelector('.footer__svg-close');
    if (button.contains(event.target)) {
      const isOpened = list.classList.contains('footer__list-open');
      document.querySelectorAll('.footer__list-open').forEach(openList => {
        openList.classList.remove('footer__list-open');
      });
      document.querySelectorAll('.footer__title_dr.active').forEach(btn => {
        btn.classList.remove('active');
        btn.querySelector('.footer__svg-open').style.display = 'block';
        btn.querySelector('.footer__svg-close').style.display = 'none';
      });
      if (!isOpened) {
        button.classList.add('active');
        list.classList.add('footer__list-open');
        openIcon.style.display = 'none';
        closeIcon.style.display = 'block';
      }
    } else if (!list.contains(event.target)) {
      list.classList.remove('footer__list-open');
      button.classList.remove('active');
      openIcon.style.display = 'block';
      closeIcon.style.display = 'none';
    }
  });
}
function handleResize() {
  if (window.innerWidth >= 632) {
    document.removeEventListener('click', handleToggle);
    buttons.forEach(button => {
      const block = button.closest('.footer__block');
      const list = block.querySelector('.footer__list');
      const openIcon = button.querySelector('.footer__svg-open');
      const closeIcon = button.querySelector('.footer__svg-close');
      list.classList.remove('footer__list-open');
      button.classList.remove('active');
      openIcon.style.display = 'block';
      closeIcon.style.display = 'none';
    });
  } else {
    document.addEventListener('click', handleToggle);
  }
}
handleResize();
window.addEventListener('resize', handleResize);

/***/ }),

/***/ 212:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

/* unused harmony exports clearItem, loadBlogs, renderArticlePage */
const items = document.querySelectorAll('.blogs__item');
const clearItem = () => {
  items.forEach(item => {
    item.remove();
  });
};
clearItem();
const loadBlogs = async () => {
  const result = await fetch('https://gorest.co.in/public-api/posts');
  const response = await result.json();
  const blogsData = response.data;
  const blogsList = document.querySelector('.blogs__list');
  if (blogsList) {
    blogsData.forEach((post, index) => {
      const li = document.createElement('li');
      li.className = 'blogs__item';
      const link = document.createElement('a');
      link.href = '#';
      link.className = 'blogs__link';
      link.setAttribute('aria-label', `Читать статью: ${post.title}`);
      link.innerHTML = `
        <img class="blogs__img" src="https://loremflickr.com/400/400?${index + 1}" alt="${post.title}" />
        <h2 class="blogs__title">${post.title}</h2>
      `;
      link.addEventListener('click', e => {
        e.preventDefault();
        sessionStorage.setItem('selectedTitle', post.title);
        sessionStorage.setItem('selectedText', post.body);
        window.location.href = 'articlePage.html';
      });
      li.appendChild(link);
      blogsList.appendChild(li);
    });
  }
};
const renderArticlePage = () => {
  document.addEventListener('DOMContentLoaded', () => {
    const titlePage = document.querySelector('.title-page');
    const selectedTitle = sessionStorage.getItem('selectedTitle');
    const selectedText = sessionStorage.getItem('selectedText');
    const pageLinkTitle = document.querySelector('.page-link-title');
    const textPageWrap = document.querySelector('.text-page-wrap');
    const backBtn = document.querySelector('.back-btn');
    document.querySelectorAll('.text-page').forEach(item => item.remove());
    if (titlePage && selectedTitle) {
      titlePage.textContent = selectedTitle;
      pageLinkTitle.textContent = selectedTitle;
    }
    if (textPageWrap && selectedText) {
      const p = document.createElement('p');
      p.className = 'text-page';
      p.textContent = selectedText;
      textPageWrap.appendChild(p);
    }
    if (backBtn) {
      backBtn.addEventListener('click', () => {
        window.location.href = 'blog.html';
      });
    }
  });
};
loadBlogs();
renderArticlePage();

/***/ }),

/***/ 615:
/***/ (() => {

if (window.location.pathname.endsWith('/') || window.location.pathname.endsWith('index.html')) {
  const timer = document.querySelector('.timer');
  if (timer) {
    const bannerText = document.querySelector('.banner-text');
    const endPromotion = document.querySelector('.end-promotion');
    const deadline = timer.getAttribute('data-timer-deadline');
    const deadlineDate = new Date(deadline);
    deadlineDate.setHours(deadlineDate.getHours() + 3);
    const getTimeRemaining = endtime => {
      const t = Date.parse(endtime) - Date.parse(new Date());
      const seconds = Math.floor(t / 1000 % 60);
      const minutes = Math.floor(t / 1000 / 60 % 60);
      const hours = Math.floor(t / (1000 * 60 * 60) % 24);
      const days = Math.floor(t / (1000 * 60 * 60 * 24));
      return {
        total: t,
        days,
        hours,
        minutes,
        seconds
      };
    };
    const getDeclension = (num, singular, few, many) => {
      if (num % 10 === 1 && num % 100 !== 11) {
        return singular;
      }
      if ([2, 3, 4].includes(num % 10) && ![12, 13, 14].includes(num % 100)) {
        return few;
      }
      return many;
    };
    const getDaysWord = days => getDeclension(days, 'день', 'дня', 'дней');
    const getHoursWord = hours => getDeclension(hours, 'час', 'часа', 'часов');
    const getMinutesWord = minutes => getDeclension(minutes, 'минута', 'минуты', 'минут');
    const getSecondsWord = seconds => getDeclension(seconds, 'секунда', 'секунды', 'секунд');
    const start = endtime => {
      timer.innerHTML = `
      <time class="timer" datetime="3d 8h 43m"
      ><span class="timer-num timer-num-days">3</span
      ><span class="timer-days-word">дня</span>
      <span class="timer-num timer-num-hours">8</span
      ><span class="timer-hours-word">часов</span>
      <span class="timer-num timer-num-minute">43</span
      ><span class="timer-minute-word">минуты</span></time
    >
           `;
      const timerNumDays = document.querySelector('.timer-num-days');
      const timerDaysWord = document.querySelector('.timer-days-word');
      const timerNumHours = document.querySelector('.timer-num-hours');
      const timerHoursWord = document.querySelector('.timer-hours-word');
      const timerNumMinute = document.querySelector('.timer-num-minute');
      const timerMinuteWord = document.querySelector('.timer-minute-word');
      let timeinterval;
      const updateTimer = () => {
        const t = getTimeRemaining(endtime);
        timerNumDays.textContent = t.days;
        timerNumHours.textContent = String(t.hours).padStart(2, '0');
        timerNumMinute.textContent = String(t.minutes).padStart(2, '0');
        timerDaysWord.textContent = getDaysWord(t.days);
        timerHoursWord.textContent = getHoursWord(t.hours);
        timerMinuteWord.textContent = getMinutesWord(t.minutes);
        if (t.days === 0) {
          timerNumDays.textContent = String(t.hours).padStart(2, '0');
          timerDaysWord.textContent = getHoursWord(t.hours);
          timerNumHours.textContent = String(t.minutes).padStart(2, '0');
          timerHoursWord.textContent = getMinutesWord(t.minutes);
          timerNumMinute.textContent = String(t.seconds).padStart(2, '0');
          timerMinuteWord.textContent = getSecondsWord(t.seconds);
        }
        if (t.total <= 0 || t.days < 0 || t.hours < 0 || t.minutes < 0 || t.seconds < 0) {
          clearInterval(timeinterval);
          bannerText.style.visibility = 'hidden';
          endPromotion.style.visibility = 'hidden';
          timerNumDays.style.visibility = 'hidden';
          timerDaysWord.style.visibility = 'hidden';
          timerNumHours.style.visibility = 'hidden';
          timerHoursWord.style.visibility = 'hidden';
          timerNumMinute.style.visibility = 'hidden';
          timerMinuteWord.style.visibility = 'hidden';
        }
      };
      updateTimer();
      timeinterval = setInterval(updateTimer, 1000);
    };
    start(deadlineDate);
  }
}

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	__webpack_require__(9);
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	__webpack_require__(89);
/******/ 	__webpack_require__(174);
/******/ 	__webpack_require__(212);
/******/ 	var __webpack_exports__ = __webpack_require__(615);
/******/ 	
/******/ })()
;